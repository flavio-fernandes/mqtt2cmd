---

# mqtt     is a dict
# topics   is a dict key is TopicStr data is a PayloadStr
# payloads is a dict key is PayloadStr or "default" data is a HandlerName
# handlers is a dict key is HandlerName data is a Job
# job      is a dict with vars, attrs and commands
# commands is a list of Commands or Jobs

mqtt:
    host: 192.168.2.238
topics:
    /buttonbox2/buttons:
        '{"p":"0x0000000000000001","l":"0x0000000000000000","x":"0x0000000000000000"}': button1
        '{"p":"0x0000000000000002","l":"0x0000000000000000","x":"0x0000000000000000"}': button2
        '{"p":"0x0000000000000004","l":"0x0000000000000000","x":"0x0000000000000000"}': button3
    /buttonbox2/battery:
        default: battery
globals:
    TOPIC: /office/light_switch
    BROKER: 192.168.2.238
    ACTION: toggle
handlers:
    button1:
        vars: { ACTION: 'on' }
        cmds: [ '/usr/local/opt/mosquitto/bin/mosquitto_pub -h @BROKER -t @TOPIC -m @ACTION' ]
    button2:
        cmds: [ 'echo button2 action @ACTION', button1 ]
    button3:
        attrs: { stop_on_failure: true, in_sequence: true, timeout: 60 }
        cmds:
            - sleep 5
            - sleep 6
            - sleep 7
            - echo done before time of @timeout seconds
    battery:
        cmds:
            - echo battery has @volts volts. low is set to @isLow
    buttonSample1:
        attrs:
            timeout: 10
            stop_on_failure: false
            in_sequence: false
        vars: { four: 4 }
        cmds:
            - echo one
            - echo two
            - sleep 5
            - sleep 2
            - sleep 5
            - echo three
            - echo @four
    buttonSample2:
        vars: { four: 4444, world: there }
        cmds:
            - echo @topic @payload @p hello @world
            - buttonSample1
            - sleep 3
            - echo bye bye @world
